@startuml architecture

object Backend {
    エンドポイントURL
}
object LocalStorage {
    ローカルストレージ
}

object Components {
    UIの部品
}
object Context {
    コンテキスト
}
object Hooks {
    フック
}
object Routes {
    ルーティング
}
object Services {
    サービス
}

Routes --> Components
Routes --> Context

Components --> Context
Components --> Hooks
Components --> Services

Hooks --> Context

Context --> Services

Services --> Backend
Services --> LocalStorage

@enduml


@startuml hook_and_context

namespace Root {
    object index {
        ※ページのルート
    }
}

namespace Contexts {
    object SampleProvider {
        ※コンポーネントにコンテキストを渡す
        ※コンテキストを共有する範囲を指定
    }
    object SampleContext {
        ※グローバルなデータを管理
        ※複数のページやコンポーネントで
        ※共有したいデータ管理
    }
    interface ISampleContext {
        + SampleValue
        + SampleCommand()
    }
}

namespace Components {
    object SampleComponent {
        ※読み取った値からHTMLを更新
        ※ButtonなどからHookにあるコマンドを実行
        object readonly useSample
        object readonly useContext
        object HTML 
    }
}

namespace Hooks {
    object useSample {
        ※ロジック担当
    }
    interface IuseSample {
        + SampleValue
        + SampleCommand()
    }
}

namespace Api {
    object SampleApi {
        ※バックエンドとの通信など
        ※外部のサービスとの通信
    }
}

index -down-> SampleComponent

index -up-> SampleProvider

SampleProvider -up-> SampleContext
SampleContext -up-|> ISampleContext

SampleComponent -up-> IuseSample : 値の読み取りandコマンド実行
SampleComponent -up-> ISampleContext : 値の読み取り

useSample -down-|> IuseSample
useSample -up-> ISampleContext
useSample -up-> SampleApi

@enduml

